/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/event_show/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить список спектаклей в афише */
        get: operations["event_api_get_event_show_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/event/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Получить данные спектакля по slug */
        get: operations["event_api_get_event_by_slug"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** EventShowFilterSchema */
        EventShowFilterSchema: {
            /** Start At */
            start_at?: string | null;
        };
        /** EventBoundSchema */
        EventBoundSchema: {
            /** ID */
            id?: number | null;
            /** Название спектакля */
            name: string;
            /** Слаг названия */
            slug: string;
            /** Краткое описание */
            short_description: string;
            /** Обложка */
            cover: string;
            /**
             * Возрастное ограничение
             * @description Минимальный разрешенный возраст зрителя, например, 18 лет
             * @default 0
             */
            min_age_limit: number;
        };
        /** EventShowOutSchema */
        EventShowOutSchema: {
            /** Id */
            id: number;
            event: components["schemas"]["EventBoundSchema"];
            /**
             * Start At
             * Format: date-time
             */
            start_at: string;
        };
        /** EventOutSchema */
        EventOutSchema: {
            /** ID */
            id?: number | null;
            /** Название спектакля */
            name: string;
            /** Слаг названия */
            slug: string;
            /** Краткое описание */
            short_description: string;
            /** Обложка */
            cover: string;
            /**
             * Возрастное ограничение
             * @description Минимальный разрешенный возраст зрителя, например, 18 лет
             * @default 0
             */
            min_age_limit: number;
            /** Подробное описание */
            description: string;
            /**
             * Длительность спектакля
             * Format: time
             */
            duration: string;
            /**
             * Есть антракт
             * @default false
             */
            has_intermission: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    event_api_get_event_show_list: {
        parameters: {
            query?: {
                start_at?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventShowOutSchema"][];
                };
            };
        };
    };
    event_api_get_event_by_slug: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventOutSchema"];
                };
            };
        };
    };
}
